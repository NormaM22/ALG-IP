# Algoritmo de identificación de parámetros

function r = g(x)
  r = [x(1,1)+x(2,1)+x(3,1)+x(4,1)-1; x(5,1)+x(6,1)+x(7,1)+x(8,1)-1; x(9,1)+x(10,1)+x(11,1)+x(12,1)-1; x(13,1)+x(14,1)+x(15,1)+x(16,1)-1];
endfunction

function s = h(x)
  s = [x(1,1); x(2,1); x(3,1); x(4,1); x(5,1); x(6,1); x(7,1); x(8,1); x(9,1); x(10,1); x(11,1); x(12,1); x(13,1); x(14,1); x(15,1); x(16,1)];
endfunction

function obj = phi (x)
N = 30; #número de elementos en la muestra X
x1 = [1;0;0;0]; #vector de estado inicial
A_T = [0.95, 0.04, 0, 0; 0.05, 0.85, 0, 0; 0, 0.1, 1, 0; 0, 0.01, 0, 1]; #matriz de transición de 4x4
X = zeros(4,N); #matriz cuyas columnas almacenarán los elementos de la muestra
X(:,1) = x1;

for i = 2:N
  X(:,i) = A_T*X(:,i-1);
endfor

R=0;
vec = [1 5 9 13];
for i = 1:4
  for j = 2:N
    c = X(i,j)*X(i,j)-2*X(i,j)*(X(1,j-1)*x(i,1)+X(2,j-1)*x(i+4,1)+X(3,j-1)*x(i+8,1)+X(4,j-1)*x(i+12,1))+X(i,j-1)*(x(vec(i),1)*(X(1,j-1)*x(1,1)+X(2,j-1)*x(5,1)+X(3,j-1)*x(9,1)+X(4,j-1)*x(13,1))+x(vec(i)+1,1)*(X(1,j-1)*x(2,1)+X(2,j-1)*x(6,1)+X(3,j-1)*x(10,1)+X(4,j-1)*x(14,1))+x(vec(i)+2,1)*(X(1,j-1)*x(3,1)+X(2,j-1)*x(7,1)+X(3,j-1)*x(11,1)+X(4,j-1)*x(15,1))+x(vec(i)+3,1)*(X(1,j-1)*x(4,1)+X(2,j-1)*x(8,1)+X(3,j-1)*x(12,1)+X(4,j-1)*x(16,1)));
    R = R + c;

endfor
endfor
X;

  obj = R;
endfunction

x0 = [1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0];
[x, obj, info, iter, nf, lambda] = sqp (x0, @phi, @g, @h);

figure;
t = linspace(0,1,16);
hold on;
scatter(t,x);
scatter(t,A=[0.95; 0.05; 0; 0; 0.04; 0.85; 0.1; 0.01; 0; 0; 1; 0; 0; 0; 0; 1]);
x
title('Matrices modelo de Markov y modelo aproximante')
legend('Matriz aprox.x','Matriz A_T')




